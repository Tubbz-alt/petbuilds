# sfml
# Builds from https://github.com/puppylinux-woof-CE/petbuilds
# File auto generated by ./mk_petbuild.sh. Edit as necessary.

. ../func
. ../build.conf
VER=2.4.2
#https://github.com/SFML/SFML/archive/2.4.2.tar.gz
URL=https://github.com/SFML/SFML/archive
PKG=sfml
COMP=tar.gz
DESC="games library"
DEPS=
CAT=BuildingBlock
DESKTOP=2.4.2.tar.gz.desktop
BUILD=
CWD=$(pwd)
[ -z "$MWD" ] && MWD=$(dirname $CWD)
[ -z "$BUILD" ] && BUILD=$DEF_BUILD
# comment these 2 below if you use a custom package() function
[ -f "$DESKTOP" ] || DESKTOP=not
[ -z "$DEPS" ] && DEPS=not

ARCH=$(uname -m)
case $ARCH in # set in build.conf
 *64) 	LIBDIR=$LIBCONF64 
		FLAGS=$CF64;;
 arm*)	LIBDIR=$LIBCONFarm
		FLAGS="-O2" ;;
 i686) 	LIBDIR=$LIBCONF32 
		FLAGS=$CF32;;
	*) 	LIBDIR=$LIBCONF32 
		FLAGS="-O2 -march=$ARCH -mtune=$ARCH";;
esac

build_() {
	mv ${PKG^^}-${VER} ${PKG}-${VER}
	(
	cd ${PKG}-${VER}
	mkdir build
		(
		cd build
		cmake -DCMAKE_INSTALL_PREFIX=/usr \
				-DCMAKE_BUILD_TYPE=release \
				-DCMAKE_INSTALL_LIBDIR=/usr/${LIBDIR} \
				-DBUILD_SHARED_LIBS=true \
				-DSFML_INSTALL_PKGCONFIG_FILES=true .. || exit
		make || exit
		make DESTDIR=${CWD}/${PKG}-install install
		)
	)
	# need a hack
	if [ "$LIBDIR" = 'lib64' ];then
		mv -f ${PKG}-install/usr/lib ${PKG}-install/usr/lib64
		sed -i "s%lib$%lib64%g" ${PKG}-install/usr/lib64/pkgconfig/*
	fi
}

# main
retrieve ${VER}.${COMP}
extract ${VER}.${COMP}
build_
package_std $PKG $VER $ARCH $DESKTOP "$DESC" $DEPS $CAT
