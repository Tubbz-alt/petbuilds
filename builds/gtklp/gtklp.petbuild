# gtklp
# Builds from https://github.com/puppylinux-woof-CE/petbuilds

. ../func
. ../build.conf

URL=http://sourceforge.net/projects/gtklp/files/gtklp/1.2.9
PKG=gtklp
SVER=1.2.9.src
VER=1.2.9
COMP=tar.gz
DESC="a graphical Frontend to CUPS"
DEPS=+cairo
CAT=System
DESKTOP=gtklp.desktop
DESKTOP2=gtklpq.desktop
CWD=$(pwd)
[ -z "$MWD" ] && MWD=$(dirname $CWD)	

ARCH=$(uname -m)
case $ARCH in
 *64) LIBDIR=lib64 ;;
 *) LIBDIR=lib ;;
esac

build() {
	cd ${PKG}-${VER}
	./configure --prefix=/usr \
				--localstatedir=/var \
				--sysconfdir=/etc \
				--libdir=/usr/${LIBDIR}
	[ "$?" -eq 0 ] || exit
	make $MKFLG
	[ "$?" -eq 0 ] || exit
	make DESTDIR=$CWD/${PKG}-install install
	cd -
}
	
package() {
	get_files ${PKG}-install ${PKG}-${VER}-${ARCH}
	(cd ${PKG}-${VER}; $MWD/split.sh ../${PKG}-install)
	# add this recipe
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}/usr/share/doc
	cat ${PKG}.petbuild > ./${PKG}-${VER}-${ARCH}/usr/share/doc/${PKG}-build-recipe
	if [ -f "$DESKTOP" ];then
		install -d -m 0755 ./${PKG}-${VER}-${ARCH}/usr/share/applications
		cat $DESKTOP > ./${PKG}-${VER}-${ARCH}/usr/share/applications/$DESKTOP
	fi
	if [ -f "$DESKTOP2" ];then
		install -d -m 0755 ./${PKG}-${VER}-${ARCH}/usr/share/applications
		cat $DESKTOP2 > ./${PKG}-${VER}-${ARCH}/usr/share/applications/$DESKTOP2
	fi
	install -d -m 0755 ./${PKG}-${VER}-${ARCH}/usr/share/pixmaps
	cp -a *.png ./${PKG}-${VER}-${ARCH}/usr/share/pixmaps/
	# delete any icon cache or library cache
	find ./${PKG}-${VER}-${ARCH} -type f -name '*cache' -delete
	[ -f ./pinstall.sh ] && install -m 0755 pinstall.sh ./${PKG}-${VER}-${ARCH}/
	[ -f ./puninstall.sh ] && install -m 0755 puninstall.sh ./${PKG}-${VER}-${ARCH}/
	for p in $(ls|grep "\-${ARCH}"|grep -v "files$") ; do
		case $p in
			*_DEV*) DESC="$PKG development"; DEPS=+${PKG} ;;
			*_DOC*) DESC="$PKG documentation"; DEPS=+${PKG} ;;
			*_NLS*) DESC="$PKG locales"; DEPS=+${PKG} ;;
		esac	
		echo "packaging $p"	
		dir2pet -x -s -w="$DESC" -d="$DEPS" -c="$CAT" -p=${p} 2>&1 >/dev/null
		rm -r $p
		mv ${p}.pet ../0pets_out
	done
	rm -r ${PKG}-install
	rm -r ${PKG}-${VER}
	mv -f *.files ../0logs
	echo "done!"
}

# main
retrieve ${PKG}-${SVER}.${COMP}
extract ${PKG}-${SVER}.${COMP}
build
package	
