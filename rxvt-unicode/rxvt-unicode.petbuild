# rxvt-unicode
# Builds from https://github.com/puppylinux-woof-CE/petbuilds

. ../func
. ../build.conf

URL=http://dist.schmorp.de/rxvt-unicode/Attic
PKG=rxvt-unicode
VER=9.21
COMP=tar.bz2
DESC="Unicode terminal emulator"
DEPS=
CAT=BuildingBlock
DESKTOP=Urxvt-terminal-emulator.desktop
BUILD=
CWD=$(pwd)
[ -z "$MWD" ] && MWD=$(dirname $CWD)	
[ -z "$BUILD" ] && BUILD=$DEF_BUILD
[ -f "$DESKTOP" ] || DESKTOP=not
[ -z "$DEPS" ] && DEPS=not	

ARCH=$(uname -m)
case $ARCH in
 *64) 	LIBDIR=$LIBCONF64 ;;
 arm*)	LIBDIR=$LIBCONFarm;;
 *) 	LIBDIR=$LIBCONF32 ;;
esac

patch_me(){
	cd ${PKG}-${VER}
	for i in ../*.patch; do
		echo "applying $i"
		patch -p0 < $i
		[ $? -ne 0 ] && echo "failed to apply $i" #&& exit 1
	done
	cd -
}

build() {
	cd ${PKG}-${VER}
	./configure --prefix=/usr \
				--localstatedir=/var \
				--sysconfdir=/etc \
				--libdir=/usr/${LIBDIR} \
				--disable-perl \
				--enable-transparency \
				--enable-iso14755 \
				--enable-frills
	[ "$?" -eq 0 ] || exit
	make $MKFLG
	[ "$?" -eq 0 ] || exit
	make DESTDIR=$CWD/${PKG}-install install
	cd -
}

package_spec() {
	# SPECIAL cut out the daemon
	rm ${PKG}-install/usr/bin/{urxvtc,urxvtd}
	cp -arf root ./${PKG}-install
	(cd ./${PKG}-install/usr/bin; ln -s urxvt rxvt)
}
	
package() {
	# add this recipe
	install -d -m 0755 ./${PKG}-install/usr/src/dev
	cat ${PKG}.petbuild > ./${PKG}-install/usr/src/dev/${PKG}-build-recipe
	if [ -f "$DESKTOP" ];then
		install -d -m 0755 ./${PKG}-install/usr/share/applications
		cat $DESKTOP > ./${PKG}-install/usr/share/applications/$DESKTOP
	fi
	# split
	get_files ${PKG}-install ${PKG}-${VER}-${ARCH}_${BUILD}
	(cd ${PKG}-${VER}; $MWD/split.sh ../${PKG}-install)
	# SPECIAL
	# delete any icon cache or library cache
	find ./${PKG}-${VER}-${ARCH}_${BUILD} -type f -name '*cache' -delete
	[ -f ./pinstall.sh ] && install -m 0755 pinstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	[ -f ./puninstall.sh ] && install -m 0755 puninstall.sh ./${PKG}-${VER}-${ARCH}_${BUILD}/
	for p in $(ls|grep "\-${ARCH}"|grep -v "files$") ; do
		case $p in
			*_DEV*) DESC="$PKG development"; DEPS=+${PKG} ;;
			*_DOC*) DESC="$PKG documentation"; DEPS=+${PKG} ;;
			*_NLS*) DESC="$PKG locales"; DEPS=+${PKG} ;;
		esac	
		echo "packaging $p"	
		dir2pet -x -s -w="$DESC" -d="$DEPS" -c="$CAT" -p=${p} 2>&1 >/dev/null
		rm -r $p
		mv ${p}.pet ../0pets_out
	done
	rm -r ${PKG}-install
	rm -r ${PKG}-${VER}
	mv -f *.files ../0logs
	echo "done!"
}

# main
retrieve ${PKG}-${VER}.${COMP}
extract ${PKG}-${VER}.${COMP}
patch_me
build
package_spec
package_std $PKG $VER $ARCH $DESKTOP "$DESC" $DEPS $CAT	

