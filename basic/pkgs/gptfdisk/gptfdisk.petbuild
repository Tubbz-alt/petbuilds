# gptfdisk
# Builds from https://github.com/puppylinux-woof-CE/petbuilds
# File auto generated by ./mk_petbuild.sh. Edit as necessary.

. ../../func
. ../../build.conf

VER=1.0.3
URL=https://sourceforge.net/projects/gptfdisk/files/gptfdisk/${VER}
PKG=gptfdisk
COMP=tar.gz
DESC="A text-mode partitioning tool that works on GUID Partition Table (GPT) disks"
DEPS=
CAT=BuildingBlock
DESKTOP=gptfdisk.desktop
BUILD=
CWD=$(pwd)
[ -z "$BUILD" ] && BUILD=$DEF_BUILD
# comment these 2 below if you use a custom package() function
[ -f "$DESKTOP" ] || DESKTOP=not
[ -z "$DEPS" ] && DEPS=not

ARCH=$(uname -m)
case $ARCH in # set in build.conf
 *64) 	LIBDIR=$LIBCONF64 
		FLAGS=$CF64;;
 arm*)	LIBDIR=$LIBCONFarm
		FLAGS="-O2" ;;
 i686) 	LIBDIR=$LIBCONF32 
		FLAGS=$CF32;;
	*) 	LIBDIR=$LIBCONF32 
		FLAGS="-O2 -march=$ARCH -mtune=$ARCH";;
esac

# main
retrieve ${PKG}-${VER}.${COMP}
extract ${PKG}-${VER}.${COMP}

install_dir=$CWD/${PKG}-install
cd $PKG-$VER
	make
	install -d ${install_dir}/sbin
	install -s -m 775 cgdisk ${install_dir}/sbin
	install -s -m 775 fixparts ${install_dir}/sbin
	install -s -m 775 gdisk ${install_dir}/sbin
	install -s -m 775 sgdisk ${install_dir}/sbin
cd ..

package_std $PKG $VER $ARCH $DESKTOP "$DESC" $DEPS $CAT
